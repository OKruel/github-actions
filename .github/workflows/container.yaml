# Docker comes pre installed in the Github VM.
name: Using_Containers
on: push
jobs:
  docker-containers-STEPS-and-JOBS:
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine
      ports:
        - 3000
      env:
        myVariable: 'This is my variable'
      #? volumes:
      #?   - "sdfd"
    steps:
      - name: Log node version from JOB level docker container
        run: node -v
      # Run commands inside a docker container in STEP level can only be done by using the ENTRYPOINT, CMD keywords of a docker file.
      - name: Log node version from STEP level docker container
        uses: docker://node:17-alpine
        # The with keyword is used to add input
        with:
          # works exactly as the entrypoint keyword in a docker file
          entrypoint: /usr/local/bin/node
          # This would act like the CMD command to add more parameters to the entrypoint command.
          args: -v
      # Run SCRIPT FILE inside a docker container in STEP level by using the ENTRYPOINT, CMD keywords of a docker file.
      - uses: actions/checkout@v2.4.0
      - name: Changing permissions
        run: chmod +x ./script.sh
      - name: Using script file in the entrypoint
        uses: docker://node:17-alpine
        # The with keyword is used to add input
        with:
          # works exactly as the entrypoint keyword in a docker file
          entrypoint: /bin/ls
          # This would act like the CMD command to add more parameters to the entrypoint command.
          args: -la

  docker-multiple-containers-JOB:
    runs-on: ubuntu-latest
    # The syntax is like docker-compose
    services:
      myClientApp:
        image: alialaa17/node-api
        ports:
          - 3001:3000
      # Github creates automatically a network between the containers
      # The url connection to this mongoDB service must be mongo instead of localhost here below the name of the service is specified as mongo (in the app the connection url points to the mongo service)
      mongo:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - name: Testing a Post a user
        run: |
          curl --request POST \
          --header 'content-type: application/json' \
          --data '{"username": "Hello", "address": "World"}' \
          --url http://localhost:3001/api/user

      - name: Testing a GET request
        run: |
          curl --request GET \
          --header 'content-type: application/json' \
          --url http://localhost:3001/api/users
